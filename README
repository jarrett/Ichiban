To use, create a folder for your project. Populate it with the appropriate folders. Create a Rakefile and add this:

require 'ichiban'
Ichiban::Tasks.new.define

Overall design
==============

The Rakefile should have as little in it as possible.

Each individual bit of functionality should be separate and self-sufficient, although they can all depend on a configured project.

For each of the following:

- Content file
- Stylesheet
- JS
- Image

...do each of these:

- Compile/copy one
- List all
- List stale
- Compile/copy all
- Compile/copy stale

Listing is done in files.rb. Compiling is done in compilation.rb.

Further:

- List all data files
- Run scripts

The compilation logger needs to be accessible from everywhere so that generators etc. can get to it.

The watcher should delete files in the compiled directory when they're no longer needed. This can't be automatically determined for files based on scripts.

The watcher should use the fork process described here:

http://rkh.im/code-reloading

Initially, the watcher forks. Both the parent and child process watch for changes, but they respond differently. The parent's only job is to kill the
child and refork upon changes to models, scripts, and helpers. The child's job is to compile.

Scripts should have an optional dependencies block:

dependencies('data/employees.csv', 'data/stores.csv') do
	# Generate calls go here
end

This will cause the block to run only when employees.csv or stores.csv has changed. Since there's no way to infer the output file paths,
we need to simply keep track of when the script was last run. Then, if any of the dependencies have changed after that, we re-run the script.
To track this, we'll store a JSON hash in scripts/.last_runs

{'employees.rb': 1316041807}